// Generated by ts-to-zod
import { z } from 'zod';

export const CASNumberSchema = z.string();

export const FTSchema = z.string();

export const StringMultiLangSchema = z.union([
  z.array(
    z.object({
      '@xml:lang': z.string(),
      '#text': z.string(),
    })
  ),
  z.object({
    '@xml:lang': z.string(),
    '#text': z.string(),
  }),
]);

export const Int1Schema = z.string();

export const Int5Schema = z.string();

export const Int6Schema = z.string();

export const LevelTypeSchema = Int1Schema;

export const PercSchema = z.string();

export const MatRSchema = z.string();

export const MatVSchema = z.string();

export const RealSchema = z.string();

export const STSchema = z.string();

export const StringSchema = z.string();

export const STMultiLangSchema = z.union([
  z.array(
    z.object({
      '@xml:lang': z.string(),
      '#text': z.string(),
    })
  ),
  z.object({
    '@xml:lang': z.string(),
    '#text': z.string(),
  }),
]);

export const FTMultiLangSchema = z.union([
  z.array(
    z.object({
      '@xml:lang': z.string(),
      '#text': z.string(),
    })
  ),
  z.object({
    '@xml:lang': z.string(),
    '#text': z.string(),
  }),
]);

export const GlobalReferenceTypeSchema = z.union([
  z.object({
    '@type': z.string(),
    '@refObjectId': z.string(),
    '@version': z.string(),
    '@uri': z.string(),
    'common:shortDescription': STMultiLangSchema,
  }),
  z.array(
    z.object({
      '@type': z.string(),
      '@refObjectId': z.string(),
      '@version': z.string(),
      '@uri': z.string(),
      'common:shortDescription': STMultiLangSchema,
    })
  ),
]);

export const GISSchema = z.string();

export const UUIDSchema = z.string();

export const YearSchema = z.number();

export const dateTimeSchema = z.string();
